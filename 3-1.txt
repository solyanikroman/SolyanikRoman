Что такое клиент -серверная архитектура?

Клиент - сервер - вычислительная или сетевая архитектура, задания в которой распределены между серверами и клиентами.

Клиент- это устройство, которое отсылает запросы к серверу. Чаще всего это Web или Desktop приложения.
Сервер- компьютерное устройство, гораздо мощнее обычного ПК.Взаимодействует с многочисленными клиентами и решает поставленные задачи.

Принцип работы системы:
    1. Клиент отправляет запрос на сервер и получает от него ответы.
    2. Сервер принимает запрос от  клиента, обрабатывает и выполняет его.
    3. Програмно- аппаратный комплекс отправляет клиенту результат обработанного запроса.

4 уровня архитектуры клиент- сервер:
    1.Одноуровневая-все прикладные программы рассредоточены по рабочим компьютерам, которые обращаются общему серверу БД.
 Архитектура надежна, но ей сложно управлять, так как данные в каждой рабочей станции будут присутствовать в разных вариантах.
    2.Двухуровневая-прикладные программы находятся на сервере приложений, в рабочих компьютерах находятся программы-клиенты, которые предоставляют интерфейс для взаимодействия с приложениями на общем сервере.
 Хорошая производительность и легкость управления. Однако падает производительность при увеличении числа пользователей, проблемы с безопасностью, все клиенты зависят от БД одного производителя.
    3.Трёхуровневая-в ней сервер БД, файловый сервер и другие - отдельный уровень, результаты которого использует сервер приложений.
Клиент связывается с БД через промежуточное ПО, находящееся на сервере приложений. Такое решение обеспечило повышение производительности взаимодействия.
 Преимуществами являются целостность данных, более высокая безопасность, защищенность от проникновения. Но усложнена структура коммуникаций между клиентом и сервером.
    4.Многоуровневая-ряд серверов приложений в работе применяет результаты друг друга и данные со сторонних серверов.
 Преимуществом выступает гибкость предоставления услуг, которые могут являться комбинацией работы различных приложений серверов разных уровней. Очевидным минусом является сложность, многокомпонентность такой архитектуры.


Общие преимущества и недостатки архитектуры:
+Централизованность(все данные и управление на центральном сервере)
+Информационная безопасность(информация администрируется централизованно)
+Производительность(использование выделенного сервера повышает скорость работыресурсов общего пользования)
+Масштабируемость(кол-во коиентов и серверов можно увеличить независимо друг от друга)

-Перегрузка трафика в сети(Главна проблема сете "клиент-сервер". Когда большое колличество одного запроса на сервере, может произойти перегрузка сети)
-Наличие единой точки отказа в сетях с одним сервером(Если отказывает сервер, все клиенты курят)
-Превышение пределов ресурса сервера(Новые клиенты могут остаться без обслуживания)
-Для управления системой требуется системный администратор.